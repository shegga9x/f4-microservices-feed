<?xml version="1.0" encoding="utf-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">
    <!-- Step 1: Create temp tables -->
    <changeSet id="202506190001-1" author="jhipster">
        <comment>Create temp_feed_ids table</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS temp_feed_ids (
                id VARCHAR(36)
            );
        </sql>
    </changeSet>
    <changeSet id="202506190001-1a" author="jhipster">
        <comment>Create temp_user_ids table</comment>
        <sql>
            CREATE TABLE IF NOT EXISTS temp_user_ids (
                id VARCHAR(36)
            );
        </sql>
    </changeSet>
    <!-- Step 2: Load data -->
    <changeSet id="202506190001-2" author="jhipster">
        <comment>Load feed IDs</comment>
        <sql>
            LOAD DATA LOCAL INFILE '${csv_path}/feed_ids.csv'
            INTO TABLE temp_feed_ids
            FIELDS TERMINATED BY ','
            LINES TERMINATED BY '\n'
            IGNORE 1 ROWS
            (id);
        </sql>
    </changeSet>
    <changeSet id="202506190001-2a" author="jhipster">
        <comment>Load user IDs</comment>
        <sql>
            LOAD DATA LOCAL INFILE '${csv_path}/user_ids.csv'
            INTO TABLE temp_user_ids
            FIELDS TERMINATED BY ','
            LINES TERMINATED BY '\n'
            IGNORE 1 ROWS
            (id);
        </sql>
    </changeSet>
    <!-- Step 4: Create feed_user_mapping table -->
    <changeSet id="202506190001-4" author="jhipster">
        <sql>
            CREATE TABLE IF NOT EXISTS feed_user_mapping (
                feed_id VARCHAR(36),
                user_id VARCHAR(36)
            );
        </sql>
    </changeSet>
    <!-- Step 4A: Populate feed_user_mapping batch 1 -->
    <changeSet id="202506190001-4a" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 1 AND 100000;
        </sql>
    </changeSet>
    <!-- Step 5A: Insert into feed_item batch 1 -->
    <changeSet id="202506190001-5a" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 1 AND 100000;
        </sql>
    </changeSet>
    <!-- Step 4B: Populate feed_user_mapping batch 2 -->
    <changeSet id="202506190001-4b" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 100001 AND 200000;
        </sql>
    </changeSet>
    <!-- Step 5B: Insert into feed_item batch 2 -->
    <changeSet id="202506190001-5b" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 100001 AND 200000;
        </sql>
    </changeSet>
    <!-- Step 4C: Populate feed_user_mapping batch 3 -->
    <changeSet id="202506190001-4c" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 200001 AND 300000;
        </sql>
    </changeSet>
    <!-- Step 5C: Insert into feed_item batch 3 -->
    <changeSet id="202506190001-5c" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 200001 AND 300000;
        </sql>
    </changeSet>
    <!-- Step 4D: Populate feed_user_mapping batch 4 -->
    <changeSet id="202506190001-4d" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 300001 AND 400000;
        </sql>
    </changeSet>
    <!-- Step 5D: Insert into feed_item batch 4 -->
    <changeSet id="202506190001-5d" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 300001 AND 400000;
        </sql>
    </changeSet>
    <!-- Step 4E: Populate feed_user_mapping batch 5 -->
    <changeSet id="202506190001-4e" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 400001 AND 500000;
        </sql>
    </changeSet>
    <!-- Step 5E: Insert into feed_item batch 5 -->
    <changeSet id="202506190001-5e" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 400001 AND 500000;
        </sql>
    </changeSet>
    <!-- Step 4F: Populate feed_user_mapping batch 6 -->
    <changeSet id="202506190001-4f" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 500001 AND 600000;
        </sql>
    </changeSet>
    <!-- Step 5F: Insert into feed_item batch 6 -->
    <changeSet id="202506190001-5f" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 500001 AND 600000;
        </sql>
    </changeSet>
    <!-- Step 4G: Populate feed_user_mapping batch 7 -->
    <changeSet id="202506190001-4g" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 600001 AND 700000;
        </sql>
    </changeSet>
    <!-- Step 5G: Insert into feed_item batch 7 -->
    <changeSet id="202506190001-5g" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 600001 AND 700000;
        </sql>
    </changeSet>
    <!-- Step 4H: Populate feed_user_mapping batch 8 -->
    <changeSet id="202506190001-4h" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 700001 AND 800000;
        </sql>
    </changeSet>
    <!-- Step 5H: Insert into feed_item batch 8 -->
    <changeSet id="202506190001-5h" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 700001 AND 800000;
        </sql>
    </changeSet>
    <!-- Step 4I: Populate feed_user_mapping batch 9 -->
    <changeSet id="202506190001-4i" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 800001 AND 900000;
        </sql>
    </changeSet>
    <!-- Step 5I: Insert into feed_item batch 9 -->
    <changeSet id="202506190001-5i" author="jhipster">
        <sql>
            SET @rn := 0;
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM (
                SELECT m.*, (@rn := @rn + 1) AS rn
                FROM feed_user_mapping m, (SELECT @rn := 0) x
            ) m
            WHERE m.rn BETWEEN 800001 AND 900000;
        </sql>
    </changeSet>
    <!-- Step 4J: Populate feed_user_mapping batch 10 -->
    <changeSet id="202506190001-4j" author="jhipster">
        <sql>
            SET @total_users := (SELECT COUNT(*) FROM temp_user_ids);
            SET @rn := 0;
            INSERT INTO feed_user_mapping (feed_id, user_id)
            SELECT f.id AS feed_id, u.id AS user_id
            FROM (
                SELECT id, (@rn := @rn + 1) AS rn FROM temp_feed_ids
            ) f
            JOIN (
                SELECT id, (@ur := @ur + 1) AS rn FROM (SELECT @ur := 0) x, temp_user_ids
            ) u ON u.rn = ((f.rn - 1) % @total_users) + 1
            WHERE f.rn BETWEEN 900001 AND 1000000;
        </sql>
    </changeSet>
    <!-- Step 5J: Insert into feed_item batch 10 -->
    <changeSet id="202506190001-5j" author="jhipster">
        <sql>
            INSERT INTO feed_item (
                id, user_id, content, image_url, video_url,
                visibility, location, created_at, updated_at
            )
            SELECT
                m.feed_id,
                m.user_id,
                'No content available',
                '',
                '',
                'PUBLIC',
                '',
                DATE_SUB(NOW(), INTERVAL FLOOR(RAND() * 60 * 24 * 30) MINUTE),
                NOW()
            FROM feed_user_mapping m
            WHERE m.feed_id IN (
                SELECT id FROM temp_feed_ids WHERE ROW_NUMBER() OVER () BETWEEN 900001 AND 1000000
            );
        </sql>
    </changeSet>
    <!-- Step 6: (Optional) Count inserted items for verification -->
    <changeSet id="202506190001-6" author="jhipster" runOnChange="true" runAlways="true">
        <comment>Check count of feed_user_mapping</comment>
        <sql>
            SELECT COUNT(*) FROM feed_user_mapping;
        </sql>
    </changeSet>
    <!-- Step 7: Drop temp and mapping tables, keep only feed_item -->
    <changeSet id="202506190001-7" author="jhipster">
        <sql>
            DROP TABLE IF EXISTS temp_feed_ids;
            DROP TABLE IF EXISTS temp_user_ids;
            DROP TABLE IF EXISTS feed_user_mapping;
        </sql>
    </changeSet>
</databaseChangeLog>